{{- if eq .Values.environment "Production" }}
{{- $dummy := set . "envVars" .Values.environment_env.production -}}
{{- $dummy2 := set . "envResources" .Values.resources.production -}}
{{- else if eq .Values.environment "Staging" }}
{{- $dummy := set . "envVars" .Values.environment_env.staging -}}
{{- $dummy2 := set . "envResources" .Values.resources.staging -}}
{{- else }}
{{- $dummy := set . "envVars" .Values.environment_env.other -}}
{{- $dummy2 := set . "envResources" .Values.resources.other -}}
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dotnet-app.fullname" . }}
  labels:
    {{- include "dotnet-app.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "dotnet-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "dotnet-app.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      volumes:
      {{- if or .Values.dumpsVolume }}
        - name: crashdumps
          persistentVolumeClaim:
            claimName: {{ .Values.dumpsVolume }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.affinity }}
      affinity:
        {{- toYaml .Values.affinity | nindent 4 }}
      {{- end }}
      containers:
        - name: {{ .Release.Name }}
          volumeMounts:
          {{- if or .Values.dumpsVolume }}
            - name: crashdumps
              mountPath: /tmp/crashdumps
              subPath: {{ .Release.Name }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          resources:
            {{- toYaml .envResources | nindent 12 }}
          env:
          {{ range $k, $v := .Values.env }}
            - name: {{ $k | quote }}
              value: {{ $v | quote }}
          {{- end }}
          {{ range $k, $v := .envVars }}
            - name: {{ $k | quote }}
              value: {{ $v | quote }}
          {{- end }}
            - name: APPLICATION__WEB__PORTS__gRPC__Port
              value: "{{ .Values.service.grpcPort }}"
            - name: APPLICATION__WEB__PORTS__gRPCInsecure__Port
              value: "{{ .Values.service.grpcInsecurePort }}"
            - name: APPLICATION__WEB__PORTS__gRPC__ExternalAddress
              value: "{{ include "dotnet-app.fullname" . }}-grpc.{{ .Release.Namespace}}.svc.cluster.local"
            - name: APPLICATION__WEB__PORTS__gRPCInsecure__ExternalAddress
              value: "{{ include "dotnet-app.fullname" . }}-grpc.{{ .Release.Namespace}}.svc.cluster.local"
          {{- if or .Values.dumpsVolume }}
            - name: DOTNET_DbgEnableMiniDump
              value: "1"
            - name: COMPlus_DbgEnableMiniDump
              value: "1"
            - name: DOTNET_EnableCrashReport
              value: "1"
            - name: DOTNET_DbgMiniDumpName
              value: "/tmp/crashdumps/coredump.%p.%e.%h.%t.dmp"
            - name: COMPlus_DbgMiniDumpName
              value: "/tmp/crashdumps/coredump.%p.%e.%h.%t.dmp"
          {{- end }}
          {{- if or .Values.secrets }}
          envFrom:
          {{- end }}
          {{- if .Values.secrets }}
            - secretRef:
                name: {{ include "dotnet-app.fullname" . }}
          {{- end }}
          {{- if .Values.healthChecks }}
          startupProbe:
            httpGet:
              path: /health/startup
              port: {{ .Values.service.port }}
              scheme: {{ .Values.service.scheme }}
            failureThreshold: 30
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.service.port }}
              scheme: {{ .Values.service.scheme }}
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: {{ .Values.service.port }}
              scheme: {{ .Values.service.scheme }}
            successThreshold: 3
          {{- end }}